<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--绑定一个DAO接口-->
<mapper namespace="com.player.es.Dao.MatchDao">
<select id="test" resultType="MatchDomain">
    SELECT *
    FROM match_,match_data
    where match_.id = match_data.id
</select>
    <select id="initMatchList" parameterType="MatchDomain">
    INSERT
    INTO match_(match_id,match_date,match_season,match_status,home_score,away_score,match_home,match_away)
    VALUES(#{matchId},#{matchDate},#{matchSeason},#{matchStatus},#{homeScore},#{awayScore},#{matchHome},#{matchAway})
</select>
    <select id="isExist" parameterType="String" resultType="Boolean">
        SELECT * from match_
        WHERE match_id = #{matchId}
    </select>
    <select id="getAllTeamSort" parameterType="String" resultType="java.util.LinkedHashMap">
        SELECT (@i:=@i+1) rand ,team_id teamId,team_name teamName ,win,fail, 100*Win/(Win+Fail) sort from
        (SELECT @i:=0) as i,
        (SELECT team_id,team_name,
        (SELECT COUNT(*) FROM match_ where match_season = #{season} AND match_status= 1 AND ((match_home = team_id AND home_score > away_score) or (match_away = team_id AND away_score > home_score))) win,
        (SELECT COUNT(*) FROM match_ where match_season =  #{season} AND match_status= 1 AND ((match_home = team_id AND away_score > home_score ) or (match_away = team_id AND home_score > away_score ))) fail
        from team
        group by team_id) AS SORT order by sort desc;
    </select>
    <!-- 球队-赛季-已结束-场次 -->
    <select id="getTeamGameCount" parameterType="String" resultType="int">
        select count(*) from match_
        where match_season = #{season} AND match_status = 1 AND (match_home = #{teamId} OR match_away = #{teamId})
    </select>
<!--  球队-安赛季分组-赛季场次数  -->
    <select id="getTeamGameCountBySeason" parameterType="String" resultType="java.util.LinkedHashMap">
        select match_season season,count(*) game from match_
        where   match_status = 1 AND (match_home = #{teamId} OR match_away = #{teamId})
        group by  match_season;
    </select>
    <!-- 获取 所有球队-已结束-比赛场次-->
    <select id="getGameCount" parameterType="String" resultType="java.util.LinkedHashMap">
        select team_id,count(*) game
        from team,match_
        where match_season = #{season} AND match_status = 1 AND (match_home = team_id OR match_away = team_id)
        group by team_id order by team_id
    </select>
    <select id="getMatchCount" parameterType="String" resultType="int">
        select count(*) from match_
        where match_status = 1 AND match_season = #{season};
    </select>
<!--    赛事信息-->
    <select id="getMatchInfo" parameterType="String" resultType="java.util.LinkedHashMap">
        select match_season season,match_status status, match_date date,
        match_home homeId, home.team_name homeName,home_score homeScore,
        match_away awayId, away.team_name awayName,away_score awayScore
        from match_,team home,team away
        where match_id = #{matchId} AND match_home = home.team_id AND match_away = away.team_id;
    </select>
    <!-- getMaxItemOfMatch   Home and Away-->
    <select id="getMaxScoreHomeOfMatch" parameterType="String" resultType="java.util.LinkedHashMap">
        select player_number homeNumber,player_name homeName,max(score) homeValue
        from match_data,player
        where player.player_id = match_data.player_id AND match_id = #{matchId} AND is_home = 1;
    </select>
    <select id="getMaxBoundHomeOfMatch" parameterType="String" resultType="java.util.LinkedHashMap">
        select player_number homeNumber,player_name homeName,max(bound) homeValue
        from match_data,player
        where player.player_id = match_data.player_id AND match_id = #{matchId} AND is_home = 1;
    </select>
    <select id="getMaxAssistHomeOfMatch" parameterType="String" resultType="java.util.LinkedHashMap">
        select player_number homeNumber,player_name homeName,max(assist) homeValue
        from match_data,player
        where player.player_id = match_data.player_id AND match_id = #{matchId} AND is_home = 1;
    </select>
    <select id="getMaxScoreAwayOfMatch" parameterType="String" resultType="java.util.LinkedHashMap">
        select player_number awayNumber,player_name awayName,max(score) awayValue
        from match_data,player
        where player.player_id = match_data.player_id AND match_id = #{matchId} AND is_home = 0;
    </select>
    <select id="getMaxBoundAwayOfMatch" parameterType="String" resultType="java.util.LinkedHashMap">
        select player_number awayNumber,player_name awayName,max(bound) awayValue
        from match_data,player
        where player.player_id = match_data.player_id AND match_id = #{matchId} AND is_home = 0;
    </select>
    <select id="getMaxAssistAwayOfMatch" parameterType="String" resultType="java.util.LinkedHashMap">
        select player_number awayNumber,player_name awayName,max(assist) awayValue
        from match_data,player
        where player.player_id = match_data.player_id AND match_id = #{matchId} AND is_home = 0;
    </select>
    <select id="getTeamSumOfMatch" parameterType="String" resultType="java.util.LinkedHashMap">
        select sum(score) '得分', sum(assist) '助攻', sum(bound) '篮板',sum(steal) "抢断", sum(block) '盖帽',
        sum(free) '罚球', sum(foul) '犯规'
        from match_data
        where match_id =#{matchId} AND is_home = #{isHome};
    </select>
    <select id="getTeamDataOfMatch" parameterType="String" resultType="MatchDataPojo">
        select  player.player_id,player_name name,player_number number,score,
        bound,assist,match_time time,foul, steal,block,turnover,free
        from match_data,player
        where match_id  = #{matchId} AND  match_data.player_id = player.player_id AND is_home = #{isHome}
    </select>
    <select id="getSeasonAllMatch" resultType="java.util.LinkedHashMap">
        select match_season,match_.match_id,match_date,match_home,home.team_name homeName,
        match_away,away.team_name awayName,home_score,away_score,match_status
        from match_,team home ,team away
        where match_season=#{season} AND (home.team_id = match_home AND away.team_id=match_away)
        order by match_date
        limit #{page},#{pageSize};
    </select>
</mapper>
