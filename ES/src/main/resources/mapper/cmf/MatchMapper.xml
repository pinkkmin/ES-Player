<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--绑定一个DAO接口-->
<mapper namespace="com.player.es.cmf.Dao.MatchDao">
    <select id="getCurrSeason" resultType="java.util.LinkedHashMap">
        select max(match_season) season from match_
    </select>
    <select id="initMatchList" parameterType="MatchDomain">
    INSERT
    INTO match_(match_id,match_date,match_season,match_status,home_score,away_score,match_home,match_away)
    VALUES(#{matchId},#{matchDate},#{matchSeason},#{matchStatus},#{homeScore},#{awayScore},#{matchHome},#{matchAway})
    </select>
    <select id="getTeamId" parameterType="String" resultType="java.util.LinkedHashMap">
        select match_home home,match_away away from match_
        where match_id = #{matchId}
    </select>
    <select id="getSeasonList" resultType="String">
        select distinct match_season season
        from match_ order by match_season desc;
    </select>
    <update id="editMatch" parameterType="MatchDataPojo">
        UPDATE match_
        SET match_date = #{date},match_status=#{status},
            match_home = #{home.teamId},match_away = #{away.teamId}
        where match_id = #{matchId};
    </update>
    <select id="isExist" parameterType="String" resultType="Boolean">
        SELECT * from match_
        WHERE match_id = #{matchId}
    </select>
    <select id="getAllTeamSort" parameterType="String" resultType="java.util.LinkedHashMap">
        SELECT (@i:=@i+1) rand ,team_id teamId,team_name teamName,win,fail, 100*Win/(Win+Fail) sort from
        (SELECT @i:=0) as i,
        (SELECT team_id,team_name,
        (SELECT COUNT(*) FROM match_ where match_season = #{season} AND match_status= 1 AND ((match_home = team_id AND home_score > away_score) or (match_away = team_id AND away_score > home_score))) win,
        (SELECT COUNT(*) FROM match_ where match_season =  #{season} AND match_status= 1 AND ((match_home = team_id AND away_score > home_score ) or (match_away = team_id AND home_score > away_score ))) fail
        from team
        group by team_id) AS SORT order by sort desc;
    </select>
    <!-- 球队-赛季-已结束-场次 -->
    <select id="getTeamGameCount" parameterType="String" resultType="int">
        select count(*) from match_
        where match_season = #{season} AND match_status = 1 AND (match_home = #{teamId} OR match_away = #{teamId})
    </select>
<!--  球队-安赛季分组-赛季场次数  -->
    <select id="getTeamGameCountBySeason" parameterType="String" resultType="java.util.LinkedHashMap">
        select match_season season,count(*) game from match_
        where   match_status = 1 AND (match_home = #{teamId} OR match_away = #{teamId})
        group by  match_season;
    </select>
    <!-- 获取 所有球队-已结束-比赛场次-->
    <select id="getGameCount" parameterType="String" resultType="java.util.LinkedHashMap">
        select team_id,count(*) game
        from team,match_
        where match_season = #{season} AND match_status = 1 AND (match_home = team_id OR match_away = team_id)
        group by team_id order by team_id
    </select>
    <select id="getMatchCount" parameterType="String" resultType="int">
        select count(*) from match_
        where match_status = 1 AND match_season = #{season};
    </select>
<!--    赛事信息-->
    <select id="getMatchInfo" parameterType="String" resultType="java.util.LinkedHashMap">
        select match_season season,match_status status, match_date date,
        match_home homeId, home.team_name homeName,home_score homeScore,
        match_away awayId, away.team_name awayName,away_score awayScore
        from match_,team home,team away
        where match_id = #{matchId} AND match_home = home.team_id AND match_away = away.team_id;
    </select>
    <!-- getMaxItemOfMatch   Home and Away-->
    <select id="getMaxScoreHomeOfMatch" parameterType="String" resultType="java.util.LinkedHashMap">
        select player_number homeNumber,player_name homeName,score homeValue
        from match_data,player
        where player.player_id = match_data.player_id AND match_id = #{matchId} AND is_home = 1
        order by score desc limit 1;
    </select>
    <select id="getMaxBoundHomeOfMatch" parameterType="String" resultType="java.util.LinkedHashMap">
        select player_number homeNumber,player_name homeName,bound homeValue
        from match_data,player
        where player.player_id = match_data.player_id AND match_id = #{matchId} AND is_home = 1
        order by bound desc limit 1;
    </select>
    <select id="getMaxAssistHomeOfMatch" parameterType="String" resultType="java.util.LinkedHashMap">
        select player_number homeNumber,player_name homeName,assist homeValue
        from match_data,player
        where player.player_id = match_data.player_id AND match_id = #{matchId} AND is_home = 1
        order by assist desc limit 1;
    </select>
    <select id="getMaxScoreAwayOfMatch" parameterType="String" resultType="java.util.LinkedHashMap">
        select player_number awayNumber,player_name awayName,score awayValue
        from match_data,player
        where player.player_id = match_data.player_id AND match_id = #{matchId} AND is_home = 0
        order by score desc limit 1;
    </select>
    <select id="getMaxBoundAwayOfMatch" parameterType="String" resultType="java.util.LinkedHashMap">
        select player_number awayNumber,player_name awayName,bound  awayValue
        from match_data,player
        where player.player_id = match_data.player_id AND match_id = #{matchId} AND is_home = 0
        order by bound desc limit 1;
    </select>
    <select id="getMaxAssistAwayOfMatch" parameterType="String" resultType="java.util.LinkedHashMap">
        select player_number awayNumber,player_name awayName,assist awayValue
        from match_data,player
        where player.player_id = match_data.player_id AND match_id = #{matchId} AND is_home = 0
        order by assist desc limit 1;
    </select>
    <select id="getTeamSumOfMatch" parameterType="String" resultType="java.util.LinkedHashMap">
        select sum(score) '得分', sum(assist) '助攻', sum(bound) '篮板',sum(steal) '抢断', sum(block) '盖帽',
        sum(free) '罚球', sum(foul) '犯规',sum(turnover)'失误'
        from match_data
        where match_id =#{matchId} AND is_home = #{isHome};
    </select>
    <select id="getTeamDataOfMatch" parameterType="String" resultType="MatchDataPojo">
        select  player.player_id,player_name name,player_number number,score,
        bound,assist,match_time time,foul, steal,block,turnover,free
        from match_data,player
        where match_id  = #{matchId} AND  match_data.player_id = player.player_id AND is_home = #{isHome}
    </select>
    <select id="getSeasonAllMatch" resultType="java.util.LinkedHashMap">
        select match_season,match_.match_id,match_date,match_home,home.team_name homeName,
        match_away,away.team_name awayName,home_score,away_score,match_status
        from match_,team home ,team away
        where match_season=#{season} AND (home.team_id = match_home AND away.team_id=match_away)
        order by match_date
        limit #{page},#{pageSize};
    </select>
    <select id="queryMatch" parameterType="MatchDataPojo" resultType="java.util.LinkedHashMap">
        select match_season,match_.match_id,match_date,match_home,home.team_name homeName,
        match_away,away.team_name awayName,home_score,away_score,match_status
        from match_,team home ,team away
        where  (home.team_id = match_home AND away.team_id=match_away)
        <if test="season!=''and season != null">
        AND     match_season=#{season}
        </if>
        <if test="homeId!=''and homeId != null">
            AND match_home = #{homeId}
        </if>
        <if test="awayId!=null and awayId  !=''">
            AND match_away = #{awayId}
        </if>
        <if test="date!=null">
            AND (match_date >= #{date})
        </if>
        order by match_date desc
        limit #{start},#{pageSize};
    </select>
    <select id="queryMatchCount" parameterType="MatchDataPojo" resultType="int">
        select count(*)
        from match_,team home ,team away
        where (home.team_id = match_home AND away.team_id=match_away)
        <if test="season!=''and season != null">
            AND match_season=#{season}
        </if>
        <if test="homeId!=''and homeId != null">
            AND match_home = #{homeId}
        </if>
        <if test="awayId!=null and awayId  !=''">
            AND match_away = #{awayId}
        </if>
        <if test="date!=null">
            AND (match_date >= #{date})
        </if>
    </select>
    <select id="todayMatch" resultType="java.util.LinkedHashMap">
        select match_id matchId,DATE_FORMAT(match_date,'%Y-%m-%d %H:%i') time,match_status status,
        match_home homeId,home.team_name homeName,match_away awayId,away.team_name awayName,
        home_score homeScore, away_score awayScore
        from match_,team home,team away
        where DATE_FORMAT(match_date,'%Y-%m-%d')  = DATE_FORMAT(now(),'%Y-%m-%d')  AND home.team_id = match_home AND away.team_id=match_away
        order by match_date Desc ;
    </select>
    <select id="sevenMatchAfterToday" resultType="java.util.LinkedHashMap">
        select match_id matchId,DATE_FORMAT(match_date,'%y-%m-%d %H:%i') time,match_status status,
        match_home homeId,home.team_name homeName,match_away awayId,away.team_name awayName,
        home_score homeScore, away_score awayScore
        from match_,team home,team away
        where match_date  > now() AND home.team_id = match_home AND away.team_id=match_away
        order by match_date Desc limit 0,7;
    </select>
    <select id="sevenMatchBeforeToday" resultType="java.util.LinkedHashMap">
        select match_id matchId,DATE_FORMAT(match_date,'%y-%m-%d %H:%i') time,match_status status,
        match_home homeId,home.team_name homeName,match_away awayId,away.team_name awayName,
        home_score homeScore, away_score awayScore
        from match_,team home,team away
        where match_date  &lt; now() AND home.team_id = match_home AND away.team_id=match_away
        order by match_date Desc limit 0,7;
    </select>
    <select id="getTeamSeasonSumList" parameterType="String" resultType="java.util.LinkedHashMap">
        select match_season season,sum(score) score,sum(assist) assist,sum(bound)bound,sum(steal) steal,
        sum(block)block,sum(foul) foul,sum(turnover)turnover
        from match_data,match_
        where match_data.match_id=match_.match_id
        AND ((match_home='cba2020015' and is_home=1) or (match_away='cba2020015' and is_home = 0))
        group by match_season order by match_season desc;
    </select>
    <select id="getAllTeamSeasonSumList" resultType="java.util.LinkedHashMap">
        select match_season season,sum(score) score,sum(assist) assist,sum(bound)bound,sum(steal) steal,
        sum(block)block,sum(foul) foul,sum(turnover) turnover
        from match_data,match_
        where match_data.match_id=match_.match_id
        group by match_season order by match_season desc;
    </select>
    <select id="getTeamGameCountList" parameterType="String" resultType="java.util.LinkedHashMap">
        select match_season season,count(*) game
        from match_
        where (match_home=#{teamId} or match_away=#{teamId})
        group by match_season order by match_season desc;
    </select>
    <select id="getAllTeamGameCountList" resultType="java.util.LinkedHashMap">
        select match_season season,count(*) game
        from match_
        group by match_season order by match_season desc;
    </select>
</mapper>
