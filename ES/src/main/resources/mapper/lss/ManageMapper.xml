<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.player.es.lss.Dao.ManageDao">
<!--    后台管理：修改用户信息-->
    <update id="editUser" parameterType="UserDto">
        update user_info set role=#{type},team_id=#{teamId} where user_id=#{userId}
    </update>
<!--    后台管理：查询用户信息-->
    <select id="queryUser" parameterType="Map" resultType="UserDomain">
        select * from user_info
        <where>
            <if test="userName!=null">
                user_name like CONCAT('%',#{userName,jdbcType=VARCHAR},'%' )
            </if>
            <if test="userType!=null">
                and role=#{userType}
            </if>
            <if test="email!=null">
                and user_email==#{email}
            </if>
        </where>
        limit #{startNum},#{endNum};
    </select>
<!--    后台管理：获取查询到的用户的总量-->
    <select id="getQueryUserNum" parameterType="Map" resultType="int">
        select count(user_id) from user_info
        <where>
            <if test="userName!=null">
                and user_info.user_name=#{userName}
            </if>
            <if test="userType!=null">
                and role=#{userType}
            </if>
            <if test="email!=null">
                and user_email==#{email}
            </if>
        </where>
    </select>
<!--    后台管理：根据teamId得到teamName-->
    <select id="getTeamName" parameterType="String" resultType="String">
        select team_name from team where team_id=#{teamId}
    </select>
<!-- 新建球队-->
    <insert id="addTeam" parameterType="TeamDomain">
        insert
        into team
        values(#{teamId}, #{teamName}, #{teamCity}, #{teamCoach}, #{teamClub}, #{teamHome},0)
    </insert>
<!--    获取最后一条team数据的id-->
    <select id="getLastTeamId" resultType="String">
        select team_id from team order by team_id desc limit 1
    </select>
<!--    返回指定球队信息-->
    <select id="getActualTeam" parameterType="String" resultType="TeamDomain">
        select * from team where team_id=#{teamId}
    </select>
<!--    删除指定公告-->
    <delete id="deleteActualNotice" parameterType="String">
        delete from notice where notice_id=#{noticeId}
    </delete>
<!--    后台管理：编辑公告-->
    <update id="editNotice" parameterType="NoticeDomain">
        update notice set auth_id=#{authId},player_id=#{playerId},home_id=#{homeId},away_id=#{awayId},notice_date=#{noticeDate},
        title=#{title},content=#{content}
    </update>
<!--    后台管理：查询公告-返回一部分公告-->
    <select id="queryNotice" parameterType="Map" resultType="NoticeDomain">
        select * from notice
        <where>
            <if test="teamId!='' and teamId != null">
                and home_id=#{teamId} or away_id=#{teamId}
            </if>
            <if test="playerName!=null and playerName!=''">
                and player_name=#{playerName}
            </if>
        </where>
        limit #{startNum},#{endNum}
    </select>
<!--    后台管理：获取查询到公告的总数-->
    <select id="getQueryNoticeNum" parameterType="Map" resultType="int">
        select count(notice_id) from notice
        <where>
            <if test="teamId!='' and teamId != null">
                and home_id=#{teamId} or away_id=#{teamId}
            </if>
            <if test="playerName!=null and playerName!=''">
                and player_name=#{playerName}
            </if>
        </where>
    </select>
<!--    后台管理：根据id获取userDomain-->
    <select id="getUserDomainByUserId" parameterType="String" resultType="UserDomain">
        select * from user_info where user_id=#{userId}
    </select>
<!--    后台管理：根据TeamId获取Service-->
    <select id="getServiceByTeamId" parameterType="Map" resultType="java.util.LinkedHashMap">
        select service.player_id playerId,player_name playerName,start_status status,date_format(start_time,"%Y-%m-%d") date
        from service,player
        where player.player_id=service.player_id and service.team_id=#{teamId}
        limit #{startNum},#{endNum}
    </select>
<!--    后台管理：查询根据teamId获取service的总量-->
    <select id="getServiceByTeamIdNum" parameterType="Map" resultType="int">
        select count(server_id)
        from service
        where team_id=#{teamId}
    </select>
<!--    后台管理：查询service-返回一部分-->
    <select id="queryService" parameterType="Map" resultType="java.util.LinkedHashMap">
        select server_id serviceId,service.player_id playerId,player_name playerName,service.team_id teamId,team_name teamName,start_status status,date_format(start_time,"%Y-%m-%d") date
        from service,team,player
        <where>
            <if test="teamId!=null and teamId!=''">
                and service.team_id=#{teamId}
            </if>
            <if test="playerId!=null and playerId!=''">
                and service.player_id=#{playerId}
            </if>
            <if test="1!=null">
                and service.player_id=player.player_id and service.team_id=team.team_id
            </if>
        </where>
        limit #{startNum},#{endNum}
    </select>
<!--    后台管理：获取查询service的总量-->
    <select id="getQueryServiceNum" parameterType="Map" resultType="int">
        select count(server_id)
        from service
        <where>
            <if test="teamId!=null and teamId!=''">
                and team_id=#{teamId}
            </if>
            <if test="playerId!=null and playerId!=''">
                and player_id=#{playerId}
            </if>
        </where>
    </select>
</mapper>
